
import { useState } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

export function useDailyJobsTrigger() {
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();

  const triggerDailyJobs = async () => {
    setLoading(true);
    
    try {
      console.log('üïõ Triggering daily jobs scraping...');
      
      const { data, error } = await supabase.functions.invoke('daily-client-jobs-trigger');

      if (error) {
        console.error('‚ùå Error calling daily-client-jobs-trigger function:', error);
        toast({
          title: "Erreur de d√©clenchement",
          description: "Impossible de lancer la r√©cup√©ration quotidienne des offres",
          variant: "destructive"
        });
        return null;
      }

      if (data?.success) {
        toast({
          title: "R√©cup√©ration lanc√©e",
          description: `${data.clients_processed} clients trait√©s pour la r√©cup√©ration des offres`,
        });
        return data;
      }

    } catch (error) {
      console.error('üí• Error in triggerDailyJobs:', error);
      toast({
        title: "Erreur de d√©clenchement",
        description: "Une erreur s'est produite lors du d√©clenchement",
        variant: "destructive"
      });
      return null;
    } finally {
      setLoading(false);
    }
  };

  return {
    triggerDailyJobs,
    loading
  };
}
